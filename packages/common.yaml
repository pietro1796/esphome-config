# Core Configuration #
esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

${platform}:
  board: ${board}

time:
  - platform: sntp
    id: my_time
    timezone: Europe/Rome

# Utility Configuration #
logger:
  baud_rate: 0
api:
ota:
  - platform: esphome
captive_portal:
web_server:
  port: 80
#external_components:
#  - source: github://TheStaticTurtle/esphome_syslog
#    components: [syslog]
#syslog:
#    ip_address: "192.168.179.11"
#    port: 5514

# Network Configuration #
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  power_save_mode: NONE
  manual_ip:
    static_ip: ${ip_addres}
    gateway: 192.168.100.1
    subnet: 255.255.255.0
    dns1: 192.168.100.1
  #ap: {} Disabilitato per ridurre canali wifi in casa


# Diagnoastic Sensors #
sensor:
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s
  - platform: uptime
    name: "Uptime (raw)"
    id: uptime_sensor
    update_interval: 60s

text_sensor:
  - platform: version
    name: EspHome Node Version
    hide_timestamp: true
  - platform: wifi_info
    ip_address:
      name: IP
  - platform: template
    name: "Uptime"
    lambda: |-
      int seconds = (int) id(uptime_sensor).state;
      int days = seconds / 86400;
      seconds %= 86400;
      int hours = seconds / 3600;
      seconds %= 3600;
      int minutes = seconds / 60;
      char buffer[64];
      if (days > 0) {
        snprintf(buffer, sizeof(buffer), "%id %ih %im", days, hours, minutes);
      } else if (hours > 0) {
        snprintf(buffer, sizeof(buffer), "%ih %im", hours, minutes);
      } else {
        snprintf(buffer, sizeof(buffer), "%im", minutes);
      }
      return {buffer};
    update_interval: 60s

binary_sensor:
  - platform: status
    name: Status
